@inherits LayoutComponentBase
@inject Blazored.LocalStorage.ILocalStorageService localStorage


<MudThemeProvider Theme="currentTheme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="25">
        <MudHidden Breakpoint="Breakpoint.SmAndDown">
            <MudIcon Icon="@Icons.Custom.Brands.MudBlazor" Size="Size.Large" />
        </MudHidden>
        <MudHidden Breakpoint="Breakpoint.MdAndUp">
            <MudIconButton Icon="@Icons.Material.Outlined.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        </MudHidden>
        <MudHidden Breakpoint="Breakpoint.Xs">
            <MudText Typo="Typo.h6" Class="ml-4">Rihal Test</MudText>
        </MudHidden>
        <MudHidden Breakpoint="Breakpoint.Xs" Invert="true">
            <MudText Typo="Typo.subtitle2">Rihal Test</MudText>
        </MudHidden>
        <MudSpacer />
        <MudButton OnClick="@((e) => DarkMode())">Toggle Dark/Light Mode</MudButton>
        <MudMenu Direction="Direction.Left" OffsetX="true" Dense="true" Class="mt-1 ml-4">
            <ChildContent>
                <MudButton OnClick="@((e) => DarkMode())">Toggle Dark/Light Mode</MudButton>
            </ChildContent>
        </MudMenu>
        <!--
        <MudMenu Icon="@Icons.Material.Outlined.Translate" Color="Color.Inherit" Direction="Direction.Bottom" OffsetY="true" Dense="true">
            <MudMenuItem>English</MudMenuItem>
            <MudMenuItem>Swedish</MudMenuItem>
            <MudMenuItem>Old Norse</MudMenuItem>
        </MudMenu>-->
        <!--
        <MudMenu Icon="@Icons.Material.Outlined.Widgets" Color="Color.Inherit" Direction="Direction.Bottom" OffsetY="true" Dense="true">
            <MudMenuItem Link="https://mudblazor.com/">MudBlazor</MudMenuItem>
            <MudMenuItem Link="https://github.com/Garderoben/RihalProjects">Source Code</MudMenuItem>
        </MudMenu>-->
        <!--
        <MudMenu Direction="Direction.Left" OffsetX="true" Dense="true" Class="mt-1 ml-4">
                <MudButton OnClick="@((e) => DarkMode())">Toggle Dark/Light Mode</MudButton>
            <ActivatorContent>
                <MudAvatar Image="images/avatar_jonny.jpg" />
            </ActivatorContent>
            <ChildContent>
                <PersonCard Class="mt-n2" />
                <MudDivider Class="mb-2" />
                <MudListItem Text="Account" Icon="@Icons.Material.Outlined.Person" Href="/personal/account" />
                <MudListItem Text="Logout" Icon="@Icons.Material.Outlined.Login" Href="/pages/authentication/login" />
            </ChildContent>
        </MudMenu>-->
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="25" ClipMode="DrawerClipMode.Always">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <!--
        <MudHidden Breakpoint="Breakpoint.SmAndDown">
            <MudToolBar DisableGutters="true">
                <MudIconButton Icon="@Icons.Material.Outlined.Menu" Color="Color.Inherit" OnClick="@((e) => DrawerToggle())" Class="ml-3" />
                <MudBreadcrumbs Items="_items"></MudBreadcrumbs>
                <MudSpacer />
                <MudButton Variant="Variant.Text" Link="https://mudblazor.com/" Style="color:#594AE2;">MudBlazor</MudButton>
                <MudButton Variant="Variant.Text" Link="https://github.com/Garderoben/RihalProjects" Style="color:#424242;" Class="mr-3">Source Code</MudButton>
            </MudToolBar>
        </MudHidden>-->
        <MudContainer MaxWidth="MaxWidth.False" Class="mt-4">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>


@code { private MudBlazorAdminDashboard _theme = new();

    public bool _drawerOpen = true;




    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    protected async override void OnInitialized()
    {
        StateHasChanged();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (currentTheme != null)
        {
            var theme = await localStorage.GetItemAsync<string>("theme");
            if (theme == "dark")
            {
                currentTheme = darkTheme;
            }
            else
            {
                currentTheme = defaultTheme;
            }
        }

    }
    private List<BreadcrumbItem> _items = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("Personal", href: "#"),
        new BreadcrumbItem("Dashboard", href: "#"),
    };


    //Dark & Light Mode setup
    async void DarkMode()
    {

        if (currentTheme == defaultTheme)
        {
            currentTheme = darkTheme;
            await localStorage.SetItemAsync("theme", "dark");
        }
        else
        {
            currentTheme = defaultTheme;
            await localStorage.SetItemAsync("theme", "light");
        }
    }

    MudTheme currentTheme = new MudTheme();
    MudTheme defaultTheme = new MudTheme()
    {
        Palette = new Palette()
        {
            Black = "#272c34"
        }
    };

    MudTheme darkTheme = new MudTheme()
    {
        Palette = new Palette()
        {
            Black = "#27272f",
            Background = "#32333d",
            BackgroundGrey = "#27272f",
            Surface = "#373740",
            DrawerBackground = "#27272f",
            DrawerText = "rgba(255,255,255, 0.50)",
            DrawerIcon = "rgba(255,255,255, 0.50)",
            AppbarBackground = "#27272f",
            AppbarText = "rgba(255,255,255, 0.70)",
            TextPrimary = "rgba(255,255,255, 0.70)",
            TextSecondary = "rgba(255,255,255, 0.50)",
            ActionDefault = "#adadb1",
            ActionDisabled = "rgba(255,255,255, 0.26)",
            ActionDisabledBackground = "rgba(255,255,255, 0.12)",
            Divider = "rgba(255,255,255, 0.12)",
            DividerLight = "rgba(255,255,255, 0.06)",
            TableLines = "rgba(255,255,255, 0.12)",
            LinesDefault = "rgba(255,255,255, 0.12)",
            LinesInputs = "rgba(255,255,255, 0.3)",
            TextDisabled = "rgba(255,255,255, 0.2)"
        }
    }; }